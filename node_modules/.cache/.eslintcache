[{"/home/ankit/Desktop/PrgScr/Frontend/react-material-ui/src/index.js":"1","/home/ankit/Desktop/PrgScr/Frontend/react-material-ui/src/App.js":"2","/home/ankit/Desktop/PrgScr/Frontend/react-material-ui/src/pages/Notes.js":"3","/home/ankit/Desktop/PrgScr/Frontend/react-material-ui/src/pages/Create.js":"4","/home/ankit/Desktop/PrgScr/Frontend/react-material-ui/src/components/NoteCard.js":"5","/home/ankit/Desktop/PrgScr/Frontend/react-material-ui/src/components/Layouts.js":"6"},{"size":455,"mtime":1613389458000,"results":"7","hashOfConfig":"8"},{"size":943,"mtime":1617097402478,"results":"9","hashOfConfig":"8"},{"size":1038,"mtime":1617095732073,"results":"10","hashOfConfig":"8"},{"size":3395,"mtime":1617089344810,"results":"11","hashOfConfig":"8"},{"size":1479,"mtime":1617097658369,"results":"12","hashOfConfig":"8"},{"size":2620,"mtime":1617097183846,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1vuytl1",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ankit/Desktop/PrgScr/Frontend/react-material-ui/src/index.js",[],["28","29"],"/home/ankit/Desktop/PrgScr/Frontend/react-material-ui/src/App.js",[],"/home/ankit/Desktop/PrgScr/Frontend/react-material-ui/src/pages/Notes.js",["30","31","32","33","34"],"/home/ankit/Desktop/PrgScr/Frontend/react-material-ui/src/pages/Create.js",["35","36"],"import React, {useState} from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Container from '@material-ui/core/Container';\nimport {makeStyles} from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\n\nexport default function Create()\n{\n  const useStyles = makeStyles({\n    field: {\n      marginTop: 20,\n      marginBottom: 20,\n      display:'block'\n    }\n  })\n  const [title,setTitle] = useState('')\n  const [details,setDetails] = useState('')\n  const [titleError,setTitleError] = useState(false)\n  const [detailsError,setDetailsError] = useState(false)\n  const [category, setCategory] = useState('money')\n  \n  const classes = useStyles()\n\n  const handleSubmit = async (e) =>\n  {\n    e.preventDefault()\n\n    if (title == '')\n      setTitleError(true)\n    else{setTitleError(false)}\n    \n    if (details == '')\n      setDetailsError(true)\n    else { setDetailsError(false) }\n    \n    if(title && details && category)\n      console.log({ title, details, category })\n    const request = await fetch('http://localhost:8000/notes', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\":\"application/json\"\n      },\n      body:JSON.stringify({title, details, category})\n    })\n    console.log(request)\n  }\n\n  return (\n    <Container>\n      <Typography\n      className={classes.title}\n      variant=\"h6\"\n      color=\"textSecondary\"\n      gutterBottom\n      >\n        Create a note\n      </Typography>\n      <form autoComplete=\"off\" noValidate onSubmit={handleSubmit} >\n        <TextField\n          className={classes.field}\n          label=\"Note Title\"\n          variant=\"outlined\"\n          fullWidth\n          color='secondary'\n          required\n          error={titleError}\n          onChange = {(e) => setTitle(e.target.value) }\n        />\n        <TextField\n          className={classes.field}\n          label=\"Note Details\"\n          variant=\"outlined\"\n          fullWidth\n          multiline\n          rows={4}\n          onChange = {(e) => setDetails(e.target.value) }\n          color='secondary'\n          required\n          error={detailsError}\n        />\n\n        <FormControl className={classes.field} >\n          <FormLabel color=\"secondary\" >Note Category</FormLabel>\n          <RadioGroup value={category} onChange={e => setCategory(e.target.value) } >\n            <FormControlLabel value=\"money\" control = {<Radio/>} label=\"Money\" />\n            <FormControlLabel value=\"todo\" control = {<Radio/>} label=\"Todo\" />\n            <FormControlLabel value=\"reminder\" control = {<Radio/>} label=\"Reminder\" />\n            <FormControlLabel value=\"work\" control = {<Radio/>} label=\"Work\" />\n          </RadioGroup>\n        </FormControl>\n\n        <Button\n          className={classes.btn}\n          type=\"submit\"\n          onClick={() => console.log('clicked !')}\n          variant=\"contained\"\n          color=\"secondary\"\n          endIcon = { <ArrowForwardIosIcon/> }\n        > \n          Submit\n        </Button>\n      </form>\n\n\n    </Container>\n  )\n}\n","/home/ankit/Desktop/PrgScr/Frontend/react-material-ui/src/components/NoteCard.js",[],"/home/ankit/Desktop/PrgScr/Frontend/react-material-ui/src/components/Layouts.js",["37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":13},{"ruleId":"42","severity":1,"message":"46","line":5,"column":8,"nodeType":"44","messageId":"45","endLine":5,"endColumn":17},{"ruleId":"42","severity":1,"message":"47","line":13,"column":11,"nodeType":"44","messageId":"45","endLine":13,"endColumn":18},{"ruleId":"48","severity":1,"message":"49","line":24,"column":3,"nodeType":"44","endLine":24,"endColumn":12,"suggestions":"50"},{"ruleId":"48","severity":1,"message":"51","line":24,"column":13,"nodeType":"52","endLine":28,"endColumn":4},{"ruleId":"53","severity":1,"message":"54","line":35,"column":15,"nodeType":"55","messageId":"56","endLine":35,"endColumn":17},{"ruleId":"53","severity":1,"message":"54","line":39,"column":17,"nodeType":"55","messageId":"56","endLine":39,"endColumn":19},{"ruleId":"53","severity":1,"message":"54","line":79,"column":57,"nodeType":"55","messageId":"56","endLine":79,"endColumn":59},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'request' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setNotes'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["59"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Add dependencies array: []",{"range":"62","text":"63"},[751,751],", []"]