[{"/home/ankit/Desktop/PrgScr/Frontend/React/react-material-ui/src/index.js":"1","/home/ankit/Desktop/PrgScr/Frontend/React/react-material-ui/src/App.js":"2","/home/ankit/Desktop/PrgScr/Frontend/React/react-material-ui/src/pages/Notes.js":"3","/home/ankit/Desktop/PrgScr/Frontend/React/react-material-ui/src/pages/Create.js":"4","/home/ankit/Desktop/PrgScr/Frontend/React/react-material-ui/src/components/Layouts.js":"5","/home/ankit/Desktop/PrgScr/Frontend/React/react-material-ui/src/components/NoteCard.js":"6"},{"size":455,"mtime":1613389458000,"results":"7","hashOfConfig":"8"},{"size":943,"mtime":1617161467655,"results":"9","hashOfConfig":"8"},{"size":1191,"mtime":1617163967798,"results":"10","hashOfConfig":"8"},{"size":3529,"mtime":1617163039494,"results":"11","hashOfConfig":"8"},{"size":3619,"mtime":1617163492494,"results":"12","hashOfConfig":"8"},{"size":2392,"mtime":1617162912164,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1n9xuun",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ankit/Desktop/PrgScr/Frontend/React/react-material-ui/src/index.js",[],["30","31"],"/home/ankit/Desktop/PrgScr/Frontend/React/react-material-ui/src/App.js",[],"/home/ankit/Desktop/PrgScr/Frontend/React/react-material-ui/src/pages/Notes.js",["32","33","34","35","36","37"],"import axios from 'axios'\nimport React, {useState, useEffect} from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Container from '@material-ui/core/Container'\nimport NoteCard from '../components/NoteCard'\nimport Masonry from 'react-masonry-css'\n\nexport default function Notes() {\n  const [notes, setNotes] = useState([])\n\n  const handleDelete = async(id) =>\n  {\n    const request = await fetch(`http://localhost:8000/notes/${id}`, {\n      method: 'DELETE',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n\n    const newNotes = notes.filter(note => note.id !== id)\n    setNotes(newNotes)\n  }\n  \n  useEffect(async() =>\n  {\n    const res = await axios.get('http://localhost:8000/notes')\n    setNotes(res.data)\n  })\n\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1\n  };\n  \n  return (\n      <Masonry\n        breakpointCols={breakpoints}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\">\n        {notes.map(note => (\n          <div key={note.id}>\n            <NoteCard note={note} handleDelete={handleDelete} />\n          </div>\n        ))}\n      </Masonry>\n  )\n}\n","/home/ankit/Desktop/PrgScr/Frontend/React/react-material-ui/src/pages/Create.js",["38","39"],"import React, {useState} from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Container from '@material-ui/core/Container';\nimport {makeStyles} from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport {useHistory} from 'react-router-dom'\n\nexport default function Create()\n{\n  const history = useHistory()\n\n  const useStyles = makeStyles({\n    field: {\n      marginTop: 20,\n      marginBottom: 20,\n      display:'block'\n    }\n  })\n  const [title,setTitle] = useState('')\n  const [details,setDetails] = useState('')\n  const [titleError,setTitleError] = useState(false)\n  const [detailsError,setDetailsError] = useState(false)\n  const [category, setCategory] = useState('money')\n  \n  const classes = useStyles()\n\n  const handleSubmit = async (e) =>\n  {\n    e.preventDefault()\n\n    if (title == '')\n      setTitleError(true)\n    else{setTitleError(false)}\n    \n    if (details == '')\n      setDetailsError(true)\n    else { setDetailsError(false) }\n    \n    if(title && details && category)\n      console.log({ title, details, category })\n    const request = await fetch('http://localhost:8000/notes', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\":\"application/json\"\n      },\n      body:JSON.stringify({title, details, category})\n    })\n    console.log(request)\n    setTitle('')\n    setDetails('')\n    history.push('/')\n  }\n\n  return (\n    <Container>\n      <Typography\n      className={classes.title}\n      variant=\"h6\"\n      color=\"textSecondary\"\n      gutterBottom\n      >\n        Create a note\n      </Typography>\n      <form autoComplete=\"off\" noValidate onSubmit={handleSubmit} >\n        <TextField\n          className={classes.field}\n          label=\"Note Title\"\n          variant=\"outlined\"\n          fullWidth\n          color='secondary'\n          required\n          error={titleError}\n          onChange = {(e) => setTitle(e.target.value) }\n        />\n        <TextField\n          className={classes.field}\n          label=\"Note Details\"\n          variant=\"outlined\"\n          fullWidth\n          multiline\n          rows={4}\n          onChange = {(e) => setDetails(e.target.value) }\n          color='secondary'\n          required\n          error={detailsError}\n        />\n\n        <FormControl className={classes.field} >\n          <FormLabel color=\"secondary\" >Note Category</FormLabel>\n          <RadioGroup value={category} onChange={e => setCategory(e.target.value) } >\n            <FormControlLabel value=\"money\" control = {<Radio/>} label=\"Money\" />\n            <FormControlLabel value=\"todo\" control = {<Radio/>} label=\"Todo\" />\n            <FormControlLabel value=\"reminder\" control = {<Radio/>} label=\"Reminder\" />\n            <FormControlLabel value=\"work\" control = {<Radio/>} label=\"Work\" />\n          </RadioGroup>\n        </FormControl>\n\n        <Button\n          className={classes.btn}\n          type=\"submit\"\n          onClick={() => console.log('clicked !')}\n          variant=\"contained\"\n          color=\"secondary\"\n          endIcon = { <ArrowForwardIosIcon/> }\n        > \n          Submit\n        </Button>\n      </form>\n\n\n    </Container>\n  )\n}\n","/home/ankit/Desktop/PrgScr/Frontend/React/react-material-ui/src/components/Layouts.js",["40"],"import { Avatar, makeStyles } from '@material-ui/core'\nimport React from 'react'\nimport Drawer from '@material-ui/core/Drawer'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { AddCircleRounded, Apps } from '@material-ui/icons'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport {format } from 'date-fns'\nimport AppBar from '@material-ui/core/AppBar'\nimport ToolBar from '@material-ui/core/Toolbar'\n\nconst drawerWidth = 240\n\nconst menuItems = [\n    {\n        text:\"My Notes\",\n        icon: <Apps color=\"secondary\"/>,\n        path:\"/\"\n    },\n    {\n        text:\"Add Note\",\n        icon: <AddCircleRounded color=\"secondary\"/>,\n        path:\"/create\"\n    }\n]\n\nconst useStyles = makeStyles((theme) =>\n{\n    return(\n        {\n            pages: {\n                background: \"#f9f9f9\",\n                width: '100%',\n                padding:theme.spacing(3)\n            },\n            root: {\n                display:'flex'\n            },\n            drawer: {\n                width:drawerWidth\n            },\n            drawerPaper: {\n                width:drawerWidth\n            },\n            active: {\n                background:'#f4f4f4'\n            },\n            title: {\n                padding:theme.spacing(2)\n            },\n            appbar:{\n                width : `calc(100% - ${drawerWidth}px)`\n            },\n            toolbar:theme.mixins.toolbar\n        }\n    )\n})\n\nconst Layouts = ({children}) => {\n    const classes = useStyles()\n    const history = useHistory()\n    const location = useLocation()\n\n    return (\n        <div className={classes.root} >\n            \n            <AppBar className={classes.appbar} >\n                <ToolBar style ={{display:'flex', justifyContent:'space-between'}}  >\n                    <Typography>\n                        Today is the {format(new Date(), 'do MMMM Y')}\n                    </Typography>\n                    <Typography style={{display:'flex', alignItems:'center'}}\n                    >\n                    Ankit\n                    <Avatar style={{marginLeft:'1rem'}} >\n                        <img src=\"https://picsum.photos/200/300\" alt=\"giuy\"/>\n                    </Avatar>\n                    </Typography>\n                </ToolBar>\n            </AppBar>\n            \n            <Drawer\n                className={classes.drawer}\n                anchor='left'\n                variant=\"permanent\"\n                classes={{ paper: classes.drawerPaper }}\n                \n            >\n                <Typography className ={classes.title} >\n                    Ninja notes\n                </Typography>\n                <List>\n                    {menuItems.map(item => (\n                        <ListItem\n                            button\n                            onClick={()=> history.push(item.path)}\n                            key={item.text}\n                            className={location.pathname==item.path ? classes.active :null}\n                        >\n                            <ListItemIcon>{item.icon}</ListItemIcon>\n                            <ListItemText primary={item.text}/>\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n\n            <div className={classes.pages}>\n                <div className={classes.toolbar} ></div>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default Layouts\n","/home/ankit/Desktop/PrgScr/Frontend/React/react-material-ui/src/components/NoteCard.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":3,"column":8,"nodeType":"47","messageId":"48","endLine":3,"endColumn":12},{"ruleId":"45","severity":1,"message":"49","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":13},{"ruleId":"45","severity":1,"message":"50","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":17},{"ruleId":"45","severity":1,"message":"51","line":14,"column":11,"nodeType":"47","messageId":"48","endLine":14,"endColumn":18},{"ruleId":"52","severity":1,"message":"53","line":25,"column":3,"nodeType":"47","endLine":25,"endColumn":12,"suggestions":"54"},{"ruleId":"52","severity":1,"message":"55","line":25,"column":13,"nodeType":"56","endLine":29,"endColumn":4},{"ruleId":"57","severity":1,"message":"58","line":38,"column":15,"nodeType":"59","messageId":"60","endLine":38,"endColumn":17},{"ruleId":"57","severity":1,"message":"58","line":42,"column":17,"nodeType":"59","messageId":"60","endLine":42,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":101,"column":57,"nodeType":"59","messageId":"60","endLine":101,"endColumn":59},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'Container' is defined but never used.","'request' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setNotes'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["63"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Add dependencies array: []",{"range":"66","text":"67"},[791,791],", []"]