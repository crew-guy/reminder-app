{"ast":null,"code":"var _jsxFileName = \"/home/ankit/Desktop/PrgScr/Frontend/react-material-ui/src/pages/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n\n  const useStyles = makeStyles({\n    field: {\n      marginTop: 20,\n      marginBottom: 20,\n      display: 'block'\n    }\n  });\n  const [title, setTitle] = useState('');\n  const [details, setDetails] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n  const [category, setCategory] = useState('money');\n  const classes = useStyles();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (title == '') setTitleError(true);else {\n      setTitleError(false);\n    }\n    if (details == '') setDetailsError(true);else {\n      setDetailsError(false);\n    }\n    if (title && details && category) console.log({\n      title,\n      details,\n      category\n    });\n    const request = await fetch('http://localhost:8000/notes', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title,\n        details,\n        category\n      })\n    });\n    console.log(request);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      children: \"Create a note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.field,\n        label: \"Note Title\",\n        variant: \"outlined\",\n        fullWidth: true,\n        color: \"secondary\",\n        required: true,\n        error: titleError,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.field,\n        label: \"Note Title\",\n        variant: \"outlined\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        onChange: e => setDetails(e.target.value),\n        color: \"secondary\",\n        required: true,\n        error: detailsError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.field,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          color: \"secondary\",\n          children: \"Note Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"money\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 56\n            }, this),\n            label: \"Money\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"todo\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 55\n            }, this),\n            label: \"Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"reminder\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 59\n            }, this),\n            label: \"Reminder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"work\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 55\n            }, this),\n            label: \"Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.btn,\n        type: \"submit\",\n        onClick: () => console.log('clicked !'),\n        variant: \"contained\",\n        color: \"secondary\",\n        endIcon: /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 23\n        }, this),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Create, \"y8+ZvrtjyQpo/13sWopoBdTBu9k=\", true);\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/home/ankit/Desktop/PrgScr/Frontend/react-material-ui/src/pages/Create.js"],"names":["React","useState","Typography","Button","ArrowForwardIosIcon","Container","makeStyles","TextField","FormControl","FormLabel","FormControlLabel","Radio","RadioGroup","Create","useStyles","field","marginTop","marginBottom","display","title","setTitle","details","setDetails","titleError","setTitleError","detailsError","setDetailsError","category","setCategory","classes","handleSubmit","e","preventDefault","console","log","request","fetch","method","headers","body","JSON","stringify","target","value","btn"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Container from '@material-ui/core/Container';\nimport {makeStyles} from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\n\nexport default function Create()\n{\n  const useStyles = makeStyles({\n    field: {\n      marginTop: 20,\n      marginBottom: 20,\n      display:'block'\n    }\n  })\n  const [title,setTitle] = useState('')\n  const [details,setDetails] = useState('')\n  const [titleError,setTitleError] = useState(false)\n  const [detailsError,setDetailsError] = useState(false)\n  const [category, setCategory] = useState('money')\n  \n  const classes = useStyles()\n\n  const handleSubmit = async (e) =>\n  {\n    e.preventDefault()\n\n    if (title == '')\n      setTitleError(true)\n    else{setTitleError(false)}\n    \n    if (details == '')\n      setDetailsError(true)\n    else { setDetailsError(false) }\n    \n    if(title && details && category)\n      console.log({ title, details, category })\n    const request = await fetch('http://localhost:8000/notes', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\":\"application/json\"\n      },\n      body:JSON.stringify({title, details, category})\n    })\n    console.log(request)\n  }\n\n  return (\n    <Container>\n      <Typography\n      className={classes.title}\n      variant=\"h6\"\n      color=\"textSecondary\"\n      gutterBottom\n      >\n        Create a note\n      </Typography>\n      <form autoComplete=\"off\" noValidate onSubmit={handleSubmit} >\n        <TextField\n          className={classes.field}\n          label=\"Note Title\"\n          variant=\"outlined\"\n          fullWidth\n          color='secondary'\n          required\n          error={titleError}\n          onChange = {(e) => setTitle(e.target.value) }\n        />\n        <TextField\n          className={classes.field}\n          label=\"Note Title\"\n          variant=\"outlined\"\n          fullWidth\n          multiline\n          rows={4}\n          onChange = {(e) => setDetails(e.target.value) }\n          color='secondary'\n          required\n          error={detailsError}\n        />\n\n        <FormControl className={classes.field} >\n          <FormLabel color=\"secondary\" >Note Category</FormLabel>\n          <RadioGroup value={category} onChange={e => setCategory(e.target.value) } >\n            <FormControlLabel value=\"money\" control = {<Radio/>} label=\"Money\" />\n            <FormControlLabel value=\"todo\" control = {<Radio/>} label=\"Todo\" />\n            <FormControlLabel value=\"reminder\" control = {<Radio/>} label=\"Reminder\" />\n            <FormControlLabel value=\"work\" control = {<Radio/>} label=\"Work\" />\n          </RadioGroup>\n        </FormControl>\n        \n        <Button\n          className={classes.btn}\n          type=\"submit\"\n          onClick={() => console.log('clicked !')}\n          variant=\"contained\"\n          color=\"secondary\"\n          endIcon = { <ArrowForwardIosIcon/> }\n        > \n          Submit\n        </Button>\n      </form>\n\n\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}