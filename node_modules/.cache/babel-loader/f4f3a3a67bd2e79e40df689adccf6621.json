{"ast":null,"code":"var _jsxFileName = \"/home/ankit/Desktop/PrgScr/Frontend/react-material-ui/src/pages/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n\n  const useStyles = makeStyles({\n    field: {\n      marginTop: 20,\n      marginBottom: 20,\n      display: 'block'\n    }\n  });\n  const [title, setTitle] = useState('');\n  const [details, setDetails] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n  const classes = useStyles();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (title = '') setTitleError(true);else {\n      setTitleError(false);\n    }\n    if (details = '') setDetailsError(true);else {\n      setDetailsError(false);\n    }\n    if (title && details) setTitle(title);\n    setDetails(details);\n    console.log({\n      title,\n      details\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      children: \"Create a note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.field,\n        autoComplete: \"off\",\n        noValidate: true,\n        label: \"Note Title\",\n        variant: \"outlined\",\n        fullWidth: true,\n        color: \"secondary\",\n        required: true,\n        error: titleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.field,\n        autoComplete: \"off\",\n        noValidate: true,\n        label: \"Note Title\",\n        variant: \"outlined\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        color: \"secondary\",\n        required: true,\n        error: detailsError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.btn,\n        type: \"submit\",\n        onClick: () => console.log('clicked !'),\n        variant: \"contained\",\n        color: \"secondary\",\n        endIcon: /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 23\n        }, this),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Create, \"Tm0tn8wuIPBmEFj8Cl3622HdKM4=\", true);\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/home/ankit/Desktop/PrgScr/Frontend/react-material-ui/src/pages/Create.js"],"names":["React","useState","Typography","Button","ArrowForwardIosIcon","Container","makeStyles","TextField","Create","useStyles","field","marginTop","marginBottom","display","title","setTitle","details","setDetails","titleError","setTitleError","detailsError","setDetailsError","classes","handleSubmit","e","preventDefault","console","log","btn"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Container from '@material-ui/core/Container';\nimport {makeStyles} from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\n\nexport default function Create()\n{\n  const useStyles = makeStyles({\n    field: {\n      marginTop: 20,\n      marginBottom: 20,\n      display:'block'\n    }\n  })\n  const [title,setTitle] = useState('')\n  const [details,setDetails] = useState('')\n  const [titleError,setTitleError] = useState(false)\n  const [detailsError,setDetailsError] = useState(false)\n  const classes = useStyles()\n\n  const handleSubmit = (e) =>\n  {\n    e.preventDefault()\n\n    if (title = '')\n      setTitleError(true)\n    else{setTitleError(false)}\n    \n    if (details = '')\n      setDetailsError(true)\n    else { setDetailsError(false) }\n    \n    if (title && details)\n      setTitle(title)\n      setDetails(details)\n      console.log({title, details})\n  }\n\n  return (\n    <Container>\n      <Typography\n      className={classes.title}\n      variant=\"h6\"\n      color=\"textSecondary\"\n      gutterBottom\n      >\n        Create a note\n      </Typography>\n      <form onSubmit={handleSubmit} >\n        <TextField\n          className={classes.field}\n          autoComplete=\"off\"\n          noValidate\n          label=\"Note Title\"\n          variant=\"outlined\"\n          fullWidth\n          color='secondary'\n          required\n          error={titleError}\n        />\n        <TextField\n          className={classes.field}\n          autoComplete=\"off\"\n          noValidate\n          label=\"Note Title\"\n          variant=\"outlined\"\n          fullWidth\n          multiline\n          rows={4}\n          color='secondary'\n          required\n          error={detailsError}\n        />\n\n        <Button\n          className={classes.btn}\n          type=\"submit\"\n          onClick={() => console.log('clicked !')}\n          variant=\"contained\"\n          color=\"secondary\"\n          endIcon = { <ArrowForwardIosIcon/> }\n        > \n          Submit\n        </Button>\n      </form>\n\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}